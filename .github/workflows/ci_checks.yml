name: CI Checks
on:
  - pull_request

jobs:
  terraform_docs:
    name: Create Terraform Module Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Render terraform docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        find-dir: modules
        output-file: README.md
        output-method: inject
        git-push: true

  terraform_format:
    runs-on: ubuntu-latest
    name: Format Terraform Files
    needs: terraform_docs
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: terraform fmt
        uses: dflook/terraform-fmt@v1

      - name: Push to Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add --all
          git commit -m "terraform-fmt: automated action" || echo "No changes to commit"
          git push

  infracost:
    runs-on: ubuntu-latest
    name: Show infracost diff
    needs: 
    - terraform_docs
    - terraform_format
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # - name: Setup Infracost
    #   uses: infracost/actions/setup@v1
    #   with:
    #     api-key: ${{ secrets.INFRACOST_API_KEY }}

    # - name: Run Infracost
    #   run: infracost breakdown --config-file=infracost.yml --format=json --out-file=/tmp/infracost.json
    #   env:
    #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    # - name: Post the comment
    #   uses: infracost/actions/comment@v1
    #   with:
    #     path: /tmp/infracost.json
    #     behavior: delete-and-new

  pre_commit:
    runs-on: ubuntu-latest
    name: Pre-Commit Checks
    needs:
    - terraform_docs
    - terraform_format
    - infracost
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Pre-Commit
        run: |
          python3 -m pip install --upgrade pip
          pip3 install --no-cache-dir pre-commit
          pip3 install --no-cache-dir checkov
          curl -L "$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 "https://.+?-linux-amd64.tar.gz")" > terraform-docs.tgz && tar -xzf terraform-docs.tgz terraform-docs && rm terraform-docs.tgz && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
          curl -L "$(curl -s https://api.github.com/repos/accurics/terrascan/releases/latest | grep -o -E -m 1 "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz && tar -xzf terrascan.tar.gz terrascan && rm terrascan.tar.gz && sudo mv terrascan /usr/bin/ && terrascan init
          curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 "https://.+?_linux_amd64.zip")" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/
          curl -L "$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 "https://.+?tfsec-linux-amd64")" > tfsec && chmod +x tfsec && sudo mv tfsec /usr/bin/
          sudo apt install -y jq
          pre-commit run --all-files